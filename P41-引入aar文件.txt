文件名是test.aar

1.在app目录下的的build.gradle中添加

repositories{
    flatDir {
        dirs 'libs'  //aar目录
    }
}

2. 将aar文件拷贝到app/libs目录下

3.在dependencies中加入aar引用
compile(name: 'test', ext: 'aar')

这个时候在编译的时候会遇到很多问题。[AndroidMenifest.xml 中]
1.权限重复   因为Android在打包的时候，会将AndroidMenifest.xml文件进行整合，
所以在一些时候会有申请权限重复的问题。这个时候,可以使用 P43 进行把重复的权限导出来，进行删除

2.一些Activity声明重复的问题
	将其删除

3.Manifest中主Module冲突，比如
三方库中为
	<application 
    android:theme="@android:style/Theme.Black"/>
而在我们自己的app module中定义的却是
<application
    android:allowBackup="false"
    android:icon="@mipmap/ic_launcher"
    android:label="@string/app_name"
    android:roundIcon="@mipmap/ic_launcher_round"
    android:supportsRtl="true"
    android:theme="@style/AppTheme">
这个时候，两者在合并的时候就会出现冲突
我们可以使用gradle给出的建议 使用   tools:replace  给与解决
	<application
    android:allowBackup="false"
    android:icon="@mipmap/ic_launcher"
    android:label="@string/app_name"
    android:roundIcon="@mipmap/ic_launcher_round"
    android:supportsRtl="true"
    android:theme="@style/AppTheme"
    tools:replace="android:allowBackup, android:theme">

 =》还有一种极端情况,如果两者都使用了 tools:replace的情况 这种情况只能借助于三方插件，
 	可以参照https://blog.csdn.net/growing_tree/article/details/74938536


4.如果两者依赖了相同库的不同版本。这种情况可以参照 
	https://juejin.im/post/5acd6daaf265da238a30ca73




同样在搜索信息的时候还知道了一些其他的知识
比如
1.在第三方中一定不能有
<action android:name="android.intent.action.MAIN" />
<category android:name="android.intent.category.LAUNCHER" />
否则在安装的时候，会出现两个图标的情况。这个时候需要将其从.xml中删除就可以了














