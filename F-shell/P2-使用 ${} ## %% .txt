假设定义了一个变量
file="/dir1/dir2/dir3/my.file.txt"

使用 ${} 可以分别替换得到不同的值
${file#*/}	删除第一个 / 及其左边的字符串   dir1/dir2/dir3/my.file.txt
${file##*/}	删除最后一个 / 及其左边的字符串 my.file.txt
${file#*.}	删除第一个 . 及其左边的字符串  file.txt
${file##*.}	删除最后一个 . 及其左边的字符串  txt

${file%/*}	删除最后一个 / 及其右边的字符  /dir1/dir2/dir3
${file%%/*} 删除第一个 / 及其右边的字符串  空值
${file%.*}  删除最后一个 . 及其右边的字符串 /dir1/dir2/dir3/my.file
${file%%.*} 删除第一个 . 及其右边的字符串 /dir1/dir2/dir3/my


记忆的方法:
	# 是去掉左边的 (在$左边)
	% 是去掉右边的 (在$右边)
	一个符号是最小匹配，两个符号是最大匹配
	${file:0:5} 提取最左边的5个字节 /dir1
	${file:5:5}	提取第5个字节右边的连续5个字节 /dir2

	这里有个地方比较绕  根据上面的定论： #/%为最小匹配， ##/%%为最大匹配
	#为删除左边的 所以 #为删除左边第一个， ##为从左往右最后一个
	%为删除右边的 所以 %为删除从左往右最后一个， %%为从左往右第一个

也可以对变量值里的字符串做替换
	${file/dir/path} 将第一个dir替换成path
	${file//dir/path}	将全部的dir替换成path  /path1/path2/path3/my.file.txt

