关于ASTC,这种在OpenGL 3.1, Vulkan设备上均已支持.但是也不是太绝对,之前捞过数据,国外的没有那么理想

这种做法的理念是:
拿 ASTC 4x4来讲

所有ASTC都是将对应块中的像素放在指定的16个字节中来处理,所以对应上面的 4x4来讲,如果是RGBA32的情况下
每个像素占用4个字节,但是在4x4的情况下,就不是了。如果非要说每个像素占用多少个字节那么就是

！！！公式: 单像素所占内存大小 = 16bytes/分块宽高*8bits

=> 每个像素占用  16/(4x4)*8 = 8bit

所以在内存中一张1024的图应该占用的内存为
1024*1024*8bit/1024/1024/8bit = 1M

对应6*6的为
1024*1024*[16/(6*6)*8bit]/1024/1024/8bit * 1024[用来换算KB] = 455.7KB



！！！ 压缩率 = 原始像素大小(32bit)/单个像素大小
！！！ 图片大小 = 原始图片大小 / 压缩率
!!!!  图片大小(MB)=长x宽x像素大小(bits)/8/1024/1024

所以有以下列表

对于一张1024*1024的原始图片[4M]
块宽高	像素大小(bits)	压缩率	压缩后图片大小
4*4			8			  4			1MB
5*5			5.12	 	6.25		655KB
6*6			3.56		8.99	    455.62KB
8*8			2			16			256KB
10*10		1.28		25			163KB
12*12		0.89		35.95		113.93KB
