泛型接口的声明形式为:
interface [接口名] <T>
{
	[接口体]
}

简单来讲,声明泛型接口时,与声明一般接口的唯一区别就是增加了一个<T>

泛型类型声明所实现的接口必须对所有可能的构造类型都保持唯一,否则就无法确定该定义为某些类型调用哪个方法了

在实例化泛型时,也可以使用"约束"对类型参数的类型种类施加限制,约束是使用where上下文关键字指定的.
1）T: 结构  类型参数必须是值类型,可以指定除Nullable以外的任何值类型
2）T: 类    类型参数必须是引用类型,这一点也适用于任何类,接口,委托或者数组类型
3) T: new() 类型参数必须具有无参数的公共构造函数,当与其他约束一起使用时,new()约束必须最后指定
4) T:<基类名> 类型参数必须是指定的基类或派生自指定的基类
5) T:<接口名称> 类型参数必须是指定的接口或实现指定的接口,可以指定多个接口约束.约束接口也可以是泛型的.
6) T: U 为T提供的类型参数参数必须是为U提供的参数或派生自为U提供的参数，这称为裸类型约束
